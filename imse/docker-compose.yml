version: '3.8'

services:
  api:
    container_name: cookbook-api
    restart: unless-stopped
    image: cookbook-api:1.0.0
    build:
      context: api
      dockerfile: Dockerfile
    ports:
      - ${PORT}:${PORT}
    networks:
      - shared-network
    depends_on:
      - postgres-db
      - mongo-db
    environment:
      PORT: ${PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
  
  client:
    container_name: cookbook-client
    restart: unless-stopped
    image: cookbook-client:1.0.0
    build:
      context: client
      dockerfile: Dockerfile
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    networks:
      - shared-network
    depends_on:
      - api

  postgres-db:
    container_name: cookbook-postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - shared-network
    volumes: 
      - postgres:/var/lib/postgresql/data

  mongo-db:
    container_name: cookbook-mongo
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - shared-network
    volumes: 
      - mongo:/var/lib/mongodb/data


networks:
  shared-network:   


volumes:
  postgres:
  mongo: